[manifest]
version = "1.0.0"
dump_lua = true
priority = -1

[[patches]]
[patches.pattern]
target = 'game.lua'
pattern = '''
function Game:update(dt)
'''
position = "after"
payload = '''
local fuck = MEDIUM.animated_sprites or {}
    for index, value in pairs(fuck) do
        value.current_time = value.current_time + dt
        if value.current_time > value.timeperframe then
            value.current_frame = value.current_frame + 1
            if value.current_frame > value.max_frames then
                value.current_frame = 1
            end
            value.current_time = 0
        end
    end
-- animated jokers
for k, v in pairs(fuck) do
if MEDIUM.config.animjokers then
G.P_CENTERS[k].pos.x = v.current_frame - 1
G.P_CENTERS[k].pos.y = v.yvalue
else
G.P_CENTERS[k].pos.x = v.originalpos.x
G.P_CENTERS[k].pos.y = v.originalpos.y
end
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'game.lua'
pattern = '''
    local bosses_used = {}
    for k, v in pairs(G.P_BLINDS) do 
        if v.boss then bosses_used[k] = 0 end
    end
    return {
'''
position = "after"
payload = '''
jankvalue = 0,
jankop = "med_jank",
injogged_cards = 0,
max_injogged_cards = 4,
'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'cardarea.lua'
pattern = '''
                local highlight_height = G.HIGHLIGHT_H
                if not card.highlighted then highlight_height = 0 end
'''
position = "after"
payload = '''
local injoggen_height = (next(SMODS.find_card("j_med_cardshark", false)) and card.injoggen) and 0.5 * G.HIGHLIGHT_H or 0
'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'cardarea.lua'
pattern = '''
                card.T.y = G.hand.T.y - 1.8*card.T.h - highlight_height + (G.SETTINGS.reduced_motion and 0 or 1)*0.1*math.sin(0.666*G.TIMERS.REAL+card.T.x) + math.abs(1.3*(-#self.cards/2 + k-0.5)/(#self.cards))^2-0.3
'''
position = "at"
payload = '''
card.T.y = G.hand.T.y - 1.8*card.T.h + injoggen_height - highlight_height + (G.SETTINGS.reduced_motion and 0 or 1)*0.1*math.sin(0.666*G.TIMERS.REAL+card.T.x) + math.abs(1.3*(-#self.cards/2 + k-0.5)/(#self.cards))^2-0.3
'''
match_indent = true

[[patches]]
[patches.pattern]
target = 'cardarea.lua'
pattern = '''
                card.T.y = self.T.y + self.T.h/2 - card.T.h/2 - highlight_height + (G.SETTINGS.reduced_motion and 0 or 1)*0.03*math.sin(0.666*G.TIMERS.REAL+card.T.x) + math.abs(0.5*(-#self.cards/2 + k-0.5)/(#self.cards))-0.2
'''
position = "at"
payload = '''
card.T.y = self.T.y + self.T.h/2 + injoggen_height - card.T.h/2 - highlight_height + (G.SETTINGS.reduced_motion and 0 or 1)*0.03*math.sin(0.666*G.TIMERS.REAL+card.T.x) + math.abs(0.5*(-#self.cards/2 + k-0.5)/(#self.cards))-0.2
'''
match_indent = true
